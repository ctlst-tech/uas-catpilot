<?xml version="1.0" encoding="utf-8" ?>

<flow>
    <spec name="vel_pos_fusion">
        <inputs>
            <i alias="vel" type="core.type.f64"/>
            <i alias="pos" type="core.type.f64"/>
            <i alias="gnss_vel" type="core.type.f64"/>
            <i alias="gnss_pos" type="core.type.f64"/>
            <i alias="gnss_ready" type="core.type.bool"/>
        </inputs>

        <outputs>
            <o alias="vel" type="core.type.f64"/>
            <o alias="pos" type="core.type.f64"/>
        </outputs>
    </spec>

    <functions>
        <f name="vel_residual" by_spec="core.vector.sub">
            <in alias="v2">inputs/gnss_vel</in>
            <in alias="v1">inputs/vel</in>
        </f>

        <f name="vel_compensation" by_spec="core.vector.mul_scalar">
            <in alias="scalar">vel_gain/output</in>
            <in alias="v">vel_residual/v</in>
        </f>

        <f name="pos_compensation" by_spec="core.vector.mul_scalar">
            <in alias="scalar">pos_gain/output</in>
            <in alias="v">pos_residual/v</in>
        </f>

        <f name="pos_residual" by_spec="core.vector.sub">
            <in alias="v2">inputs/gnss_pos</in>
            <in alias="v1">inputs/pos</in>
        </f>

        <f name="vel_gain" by_spec="core.source.constant">
            <param alias="value">0.01</param>
        </f>

        <f name="pos_gain" by_spec="core.source.constant">
            <param alias="value">0.01</param>
        </f>

        <f name="pos_correction" by_spec="core.vector.add">
            <in alias="v2">pos_compensation/v</in>
            <in alias="v1">inputs/pos</in>
        </f>

        <f name="vel_correction" by_spec="core.vector.add">
            <in alias="v2">vel_compensation/v</in>
            <in alias="v1">inputs/vel</in>
        </f>
    </functions>

    <link_outputs>
        <link alias="vel">vel_correction/v</link>
        <link alias="pos">pos_correction/v</link>
    </link_outputs>
</flow>
